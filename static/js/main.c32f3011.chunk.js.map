{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","cn","href","onClick","handleSelectedTab","title","content","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAACC,GACpC,IACEC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,cACAC,EACEH,EADFG,cAWIC,EAAcH,EACjBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MACrBD,EAAK,GAEV,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,mCAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBACE,UAAQ,MACRE,UAAWE,IACT,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KAH1C,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBA3BG,SAACN,GACrBA,EAAIC,KAAOL,GAIfC,EAAcG,GAsBaO,CAAkBP,IAHnC,SAKGA,EAAIQ,SAPFR,EAAIC,WAejB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cC/CRd,EAAO,CAClB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOG,EAAP,KAAoBc,EAApB,KAMA,OACE,sBAAKV,UAAU,eAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBJ,EAAYU,SAElC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAZkB,SAACG,GACvBY,EAAeZ,UCfnBa,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c32f3011.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../Types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = (props) => {\n  const {\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  } = props;\n\n  const handleSelectedTab = (tab: Tab) => {\n    if (tab.id === selectedTabId) {\n      return;\n    }\n\n    onTabSelected(tab);\n  };\n\n  const selectedTab = tabs\n    .find(tab => tab.id === selectedTabId)\n    || tabs[0];\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-toggle is-toggle-rounded\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              data-cy=\"Tab\"\n              className={cn(\n                { 'is-active': selectedTab.id === tab.id },\n              )}\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleSelectedTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs/Tabs';\nimport { Tab } from './Types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const handleChangeTab = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section card\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={handleChangeTab}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}